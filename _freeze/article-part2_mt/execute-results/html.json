{
  "hash": "9900ba52aa4cc28b4ad7cb249a9d557d",
  "result": {
    "markdown": "---\ntitle: \"Métodos\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n<!-- https://bmcmedresmethodol.biomedcentral.com/articles/10.1186/1471-2288-6-13 -->\n\n## Geração e transformação de dados\n\nEsta proposta ilustra a aplicação do SEM para variáveis categóricas binárias usando a transformação de *Yule* para aproximar a matriz dos coeficientes de correlação de *Pearson* a partir da razão de chances (*odds ratio* **OR**) por uma fórmula bem conhecida $(OR-1)/(OR+1)$. \n\nO primeiro exemplo é baseado em processos de geração de dados conhecido para evitar incerteza sobre o verdadeiro modelo, praticamente inevitável para dados empíricos. Um conjunto de dados com **5000** observações foi gerado para permitir a aproximação da normalidade. Primeiramente, três variáveis aleatórias contínuas, denominadas $x_1$ a $x_3$, foram criadas a partir de uma distribuição uniforme. As variáveis não foram correlacionadas na população. Suas versões binárias, denominadas $BIN_1$ a $BIN_3$, foram obtidos codificando os valores acima da média como 1 *versus* 0, caso contrário. Duas variáveis dependentes contínuas foram criadas pelas seguintes equações:\n\n\n$$m = 1.5 x_1 + 2 x_2 + e_1$$\n\n$$y = 0.5 x_2 - 2.5 x_3 + 1.3 m + e_2$$\n\n::: {.cell}\n\n```{.r .cell-code}\nx1 = runif(5000)\nx2 = runif(5000)\nx3 = runif(5000)\nbin1 = ifelse(x1 > 0.5,1,0)\nbin2 = ifelse(x2 > 0.5,1,0)\nbin3 = ifelse(x3 > 0.5,1,0)\nm    = 1.5*x1 + 2*x2 + rnorm(5000)\ny    = 0.5*x1 - 2.5*x2 + 1.3*m + rnorm(5000)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(data = as.data.frame(x1), aes(x=x1))+geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](article-part2_mt_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = as.data.frame(bin1), aes(x=bin1))+geom_bar()\n```\n\n::: {.cell-output-display}\n![](article-part2_mt_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n:::\n\n\n\n\ncom $e_1$ e $e_2$ sendo erros aleatórios normalmente distribuídos $N(0,1)$, gerados a partir de diferentes sementes (*seeds*). \n\nAs versões binárias das variáveis dependentes, denominadas $MBIN$ e $YBIN$, foram criados aplicando a regra de classificação de regressão logística, ou seja, pontuação 1 se $exp(m)/(1 + exp (m))$ e $exp(y)/(1 + exp(y))$ excederem 0.5 *versus* 0 caso contrário.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(m,exp(m)/(1 + exp (m)))\nabline(h=0.5, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](article-part2_mt_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(y,exp(y)/(1 + exp (y)))\nabline(h=0.5, col=\"red\")\n```\n\n::: {.cell-output-display}\n![](article-part2_mt_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmbin = ifelse(exp(m)/(1 + exp (m)) > 0.5, 1,0)\nybin = ifelse(exp(y)/(1 + exp(y)) > 0.5, 1,0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(m,mbin)\n```\n\n::: {.cell-output-display}\n![](article-part2_mt_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(y,ybin)\n```\n\n::: {.cell-output-display}\n![](article-part2_mt_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n\n\n\nAs razões de chances (OR) observadas entre as variáveis de interesse nos conjuntos de dados gerados são relatadas na tabela 1. As relações estruturais entre as variáveis no segundo conjunto de dados estão representadas na Figura 2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(epitools)\nRRtable = table(bin1,ybin)\nriskratio.wald(RRtable)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$data\n       ybin\nbin1       0    1 Total\n  0      849 1627  2476\n  1      320 2204  2524\n  Total 1169 3831  5000\n\n$measure\n    risk ratio with 95% C.I.\nbin1 estimate    lower    upper\n   0 1.000000       NA       NA\n   1 1.328879 1.286896 1.372231\n\n$p.value\n    two-sided\nbin1 midp.exact fisher.exact   chi.square\n   0         NA           NA           NA\n   1          0 1.165922e-74 7.672061e-73\n\n$correction\n[1] FALSE\n\nattr(,\"method\")\n[1] \"Unconditional MLE & normal approximation (Wald) CI\"\n```\n:::\n\n```{.r .cell-code}\noddsratio.wald(RRtable)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$data\n       ybin\nbin1       0    1 Total\n  0      849 1627  2476\n  1      320 2204  2524\n  Total 1169 3831  5000\n\n$measure\n    odds ratio with 95% C.I.\nbin1 estimate    lower    upper\n   0  1.00000       NA       NA\n   1  3.59403 3.113139 4.149206\n\n$p.value\n    two-sided\nbin1 midp.exact fisher.exact   chi.square\n   0         NA           NA           NA\n   1          0 1.165922e-74 7.672061e-73\n\n$correction\n[1] FALSE\n\nattr(,\"method\")\n[1] \"Unconditional MLE & normal approximation (Wald) CI\"\n```\n:::\n\n```{.r .cell-code}\n# valor aproximado de coeficiente de correlação - aproximação\ncor(bin1,ybin) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2552873\n```\n:::\n\n```{.r .cell-code}\n# coeficinente de Phi - variáveis binárias\nsqrt(chisq.test(table(bin1,ybin), correct=FALSE)$statistic/length(bin1))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nX-squared \n0.2552873 \n```\n:::\n\n```{.r .cell-code}\nlibrary(psych)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'psych'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:ggplot2':\n\n    %+%, alpha\n```\n:::\n\n```{.r .cell-code}\ntetrachoric(RRtable)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCall: tetrachoric(x = RRtable)\ntetrachoric correlation \n[1] 0.43\n\n with tau of \n     0      0 \n-0.012 -0.726 \n```\n:::\n\n```{.r .cell-code}\nYule(RRtable)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5646524\n```\n:::\n\n```{.r .cell-code}\nYuleCor(RRtable)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nYule and Generalized Yule coefficients\nCall: YuleCor(x = RRtable)\n\nYule coefficient \n      0     1\n0  0.98 -0.98\n1 -0.98  0.98\n\nUpper and Lower Confidence Intervals = \n   0    1\n0  1 0.97\n1 -1 1.00\n```\n:::\n\n```{.r .cell-code}\nYuleBonett(RRtable)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nYule and Generalized Yule coefficients\nLower CI  Yule coefficient Upper CI \n[1] 0.51 0.56 0.61\n```\n:::\n\n```{.r .cell-code}\n# Logistic regression\nm1 = glm(bin1 ~ ybin, family = binomial)\nm1_ = glm(ybin ~ bin1, family = binomial)\nrequire(MASS)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: MASS\n```\n:::\n\n```{.r .cell-code}\nexp(confint(m1))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWaiting for profiling to be done...\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n                2.5 %    97.5 %\n(Intercept) 0.3310119 0.4281106\nybin        3.1162033 4.1536021\n```\n:::\n\n```{.r .cell-code}\nconfint.default(m1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                2.5 %     97.5 %\n(Intercept) -1.104304 -0.8471722\nybin         1.135632  1.4229170\n```\n:::\n\n```{.r .cell-code}\n# https://bmcmedresmethodol.biomedcentral.com/articles/10.1186/1471-2288-6-13/tables/1\n# ** Back-transformed from Q to OR by (1+Q)/(1-Q) - onde Correlation (Q) estimate\nlibrary(epiDisplay)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: foreign\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: survival\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'survival'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:epitools':\n\n    ratetable\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: nnet\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'epiDisplay'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:psych':\n\n    alpha, cs, lookup\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ggplot2':\n\n    alpha\n```\n:::\n\n```{.r .cell-code}\nlogistic.display(m1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nLogistic regression predicting bin1 \n \n              OR(95%CI)         P(Wald's test) P(LR-test)\nybin: 1 vs 0  3.59 (3.11,4.15)  < 0.001        < 0.001   \n                                                         \nLog-likelihood = -3297.9639\nNo. of observations = 5000\nAIC value = 6599.9277\n```\n:::\n\n```{.r .cell-code}\nlibrary(sjPlot)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#refugeeswelcome\n```\n:::\n\n```{.r .cell-code}\nlibrary(sjmisc)\nlibrary(sjlabelled)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'sjlabelled'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ggplot2':\n\n    as_label\n```\n:::\n\n```{.r .cell-code}\ntab_model(m1)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table style=\"border-collapse:collapse; border:none;\">\n<tr>\n<th style=\"border-top: double; text-align:center; font-style:normal; font-weight:bold; padding:0.2cm;  text-align:left; \">&nbsp;</th>\n<th colspan=\"3\" style=\"border-top: double; text-align:center; font-style:normal; font-weight:bold; padding:0.2cm; \">bin1</th>\n</tr>\n<tr>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  text-align:left; \">Predictors</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  \">Odds Ratios</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  \">CI</td>\n<td style=\" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  \">p</td>\n</tr>\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; \">(Intercept)</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \">0.38</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \">0.33&nbsp;&ndash;&nbsp;0.43</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"><strong>&lt;0.001</strong></td>\n</tr>\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; \">ybin</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \">3.59</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \">3.12&nbsp;&ndash;&nbsp;4.15</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  \"><strong>&lt;0.001</strong></td>\n</tr>\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; padding-top:0.1cm; padding-bottom:0.1cm; border-top:1px solid;\">Observations</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left; border-top:1px solid;\" colspan=\"3\">5000</td>\n</tr>\n<tr>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; padding-top:0.1cm; padding-bottom:0.1cm;\">R<sup>2</sup> Tjur</td>\n<td style=\" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;\" colspan=\"3\">0.065</td>\n</tr>\n\n</table>\n\n`````\n:::\n:::\n\n\n![Modelo simulado.](images/SEM_exemplo2.png){#sem1 .Figuras fig-alt=\"Modelo simulado.\" width=\"300\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_art1 = data.frame(bin1,bin2,bin3,mbin,ybin)\n\nlibrary(lavaan)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nThis is lavaan 0.6-12\nlavaan is FREE software! Please report any bugs.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'lavaan'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:psych':\n\n    cor2cov\n```\n:::\n\n```{.r .cell-code}\nlibrary(lavaanPlot)\n\n\n# Model specification\nmodel1 = '\n        # Structural model\n        mbin ~ b1*bin1 + b2*bin2 + b3*bin3\n        ybin ~ a1*bin1 + a2*bin2 + a3*bin3\n        ybin ~ a4*mbin\n'\n\n# Model estimation\nmodel1.fit = sem(model1,\n                 data = data_art1,\n                 estimator = \"ML\",\n                 meanstructure = FALSE)\nsummary(model1.fit,\n        rsquare = TRUE,\n        standardized = TRUE,\n        fit.measures = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlavaan 0.6-12 ended normally after 1 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                         9\n\n  Number of observations                          5000\n\nModel Test User Model:\n                                                      \n  Test statistic                                 0.000\n  Degrees of freedom                                 0\n\nModel Test Baseline Model:\n\n  Test statistic                              1523.991\n  Degrees of freedom                                 7\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    1.000\n  Tucker-Lewis Index (TLI)                       1.000\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)              -2518.197\n  Loglikelihood unrestricted model (H1)      -2518.197\n                                                      \n  Akaike (AIC)                                5054.394\n  Bayesian (BIC)                              5113.049\n  Sample-size adjusted Bayesian (BIC)         5084.450\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.000\n  90 Percent confidence interval - lower         0.000\n  90 Percent confidence interval - upper         0.000\n  P-value RMSEA <= 0.05                             NA\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.000\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n  mbin ~                                                                \n    bin1      (b1)    0.083    0.007   11.472    0.000    0.083    0.157\n    bin2      (b2)    0.114    0.007   15.612    0.000    0.114    0.213\n    bin3      (b3)    0.003    0.007    0.459    0.646    0.003    0.006\n  ybin ~                                                                \n    bin1      (a1)    0.164    0.011   15.214    0.000    0.164    0.194\n    bin2      (a2)   -0.069    0.011   -6.351    0.000   -0.069   -0.082\n    bin3      (a3)   -0.001    0.011   -0.049    0.961   -0.001   -0.001\n    mbin      (a4)    0.621    0.021   29.992    0.000    0.621    0.391\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n   .mbin              0.066    0.001   50.000    0.000    0.066    0.931\n   .ybin              0.142    0.003   50.000    0.000    0.142    0.792\n\nR-Square:\n                   Estimate\n    mbin              0.069\n    ybin              0.208\n```\n:::\n\n```{.r .cell-code}\n# Visualize the path model\nlibrary(semPlot)\nsemPaths(model1.fit,\n         rotation = 3,\n         layout = \"tree2\",\n         what = \"std\",\n         posCol = \"black\")\n```\n\n::: {.cell-output-display}\n![](article-part2_mt_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "article-part2_mt_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}